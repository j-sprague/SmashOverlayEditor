/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package streamprint;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.NoSuchElementException;
import java.util.Scanner;
import java.util.Timer;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;

/**
 *
 * @author jsman
 */
public class SmashOverlay extends javax.swing.JFrame {
    /**
     * Creates new form SmashOverlay
     */
    
    public SmashOverlay() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        p1Name = new javax.swing.JTextField();
        p1Score = new javax.swing.JSpinner();
        p1Character = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        p2Character = new javax.swing.JComboBox<>();
        p2Score = new javax.swing.JSpinner();
        p2Name = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        leftMsg = new javax.swing.JTextField();
        rightMsg = new javax.swing.JTextField();
        commentary = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        fakeCombo = new javax.swing.JComboBox<>();
        saveMsg = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        loss1 = new javax.swing.JCheckBox();
        loss2 = new javax.swing.JCheckBox();
        bestOf = new javax.swing.JComboBox<>();
        top8gen = new javax.swing.JButton();
        scoreAuto = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);
        setSize(new java.awt.Dimension(2000, 600));

        jLabel1.setText("Player1");

        jLabel2.setText("Score1");

        jLabel3.setText("Character1");

        p1Name.setNextFocusableComponent(p1Score);
        p1Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p1NameActionPerformed(evt);
            }
        });
        p1Name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                p1NameKeyTyped(evt);
            }
        });

        p1Score.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        p1Score.setNextFocusableComponent(p1Character);
        p1Score.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                p1ScoreStateChanged(evt);
            }
        });
        p1Score.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                p1ScoreKeyTyped(evt);
            }
        });

        p1Character.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<none>", "Mario", "Donkey Kong", "Link", "Samus", "Dark Samus", "Yoshi", "Kirby", "Fox", "Pikachu", "Luigi", "Ness", "Captain Falcon", "Jigglypuff", "Peach", "Daisy", "Bowser", "Icies", "Sheik", "Zelda", "Dr. Mario", "Pichu", "Falco", "Marth", "Lucina", "Young Link", "Ganondorf", "Mewtwo", "Roy", "Chrom", "Mr. G&W", "Meta Knight", "Pit", "Dark Pit", "Zero Suit Samus", "Wario", "Snake", "Ike", "Pokemon Trainer", "Diddy Kong", "Lucas", "Sonic", "King Dedede", "Olimar", "Lucario", "ROB", "Toon Link", "Wolf", "Villager", "Mega Man", "Wii Fit Trainer", "Rosalina & Luma", "Little Mac", "Greninja", "Mii Brawler", "Mii Swordfighter", "Mii Gunner", "Palutena", "Pac-Man", "Robin", "Shulk", "Bowser Jr.", "Duck Hunt", "Ryu", "Ken", "Cloud", "Corrin", "Bayonetta", "Inkling", "Ridley", "Simon", "Richter", "King K Rool", "Isabelle", "Incineroar", "Piranha Plant", "Joker", "Hero", "Banjo & Kazooie", "Terry", "Byleth", "Min Min", "Steve", "Sephiroth", "Pyra+Mythra", "Kazuya", "Sora" }));
        p1Character.setNextFocusableComponent(p2Name);
        p1Character.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p1CharacterActionPerformed(evt);
            }
        });

        jLabel4.setText("Player2");

        jLabel5.setText("Score2");

        jLabel6.setText("Character2");

        p2Character.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<none>", "Mario", "Donkey Kong", "Link", "Samus", "Dark Samus", "Yoshi", "Kirby", "Fox", "Pikachu", "Luigi", "Ness", "Captain Falcon", "Jigglypuff", "Peach", "Daisy", "Bowser", "Icies", "Sheik", "Zelda", "Dr. Mario", "Pichu", "Falco", "Marth", "Lucina", "Young Link", "Ganondorf", "Mewtwo", "Roy", "Chrom", "Mr. G&W", "Meta Knight", "Pit", "Dark Pit", "Zero Suit Samus", "Wario", "Snake", "Ike", "Pokemon Trainer", "Diddy Kong", "Lucas", "Sonic", "King Dedede", "Olimar", "Lucario", "ROB", "Toon Link", "Wolf", "Villager", "Mega Man", "Wii Fit Trainer", "Rosalina & Luma", "Little Mac", "Greninja", "Mii Brawler", "Mii Swordfighter", "Mii Gunner", "Palutena", "Pac-Man", "Robin", "Shulk", "Bowser Jr.", "Duck Hunt", "Ryu", "Ken", "Cloud", "Corrin", "Bayonetta", "Inkling", "Ridley", "Simon", "Richter", "King K Rool", "Isabelle", "Incineroar", "Piranha Plant", "Joker", "Hero", "Banjo & Kazooie", "Terry", "Byleth", "Min Min", "Steve", "Sephiroth", "Pyra+Mythra", "Kazuya", "Sora" }));
        p2Character.setNextFocusableComponent(jButton2);
        p2Character.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p2CharacterActionPerformed(evt);
            }
        });

        p2Score.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        p2Score.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        p2Score.setNextFocusableComponent(p2Character);
        p2Score.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                p2ScoreStateChanged(evt);
            }
        });
        p2Score.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                p2ScoreKeyTyped(evt);
            }
        });

        p2Name.setNextFocusableComponent(p2Score);
        p2Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p2NameActionPerformed(evt);
            }
        });
        p2Name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                p2NameKeyTyped(evt);
            }
        });

        jLabel7.setText("LeftMsg");

        jLabel8.setText("RightMsg");

        leftMsg.setNextFocusableComponent(rightMsg);
        leftMsg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftMsgActionPerformed(evt);
            }
        });
        leftMsg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                leftMsgKeyTyped(evt);
            }
        });

        rightMsg.setNextFocusableComponent(commentary);
        rightMsg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightMsgActionPerformed(evt);
            }
        });
        rightMsg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                rightMsgKeyTyped(evt);
            }
        });

        commentary.setNextFocusableComponent(saveButton);
        commentary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commentaryActionPerformed(evt);
            }
        });
        commentary.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                commentaryKeyTyped(evt);
            }
        });

        saveButton.setText("Save Changes...");
        saveButton.setNextFocusableComponent(p1Name);
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/streamprint/switch.png"))); // NOI18N
        jButton2.setNextFocusableComponent(leftMsg);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        fakeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<none>", "Mario", "Donkey Kong", "Link", "Samus", "Dark Samus", "Yoshi", "Kirby", "Fox", "Pikachu", "Luigi", "Ness", "Captain Falcon", "Jigglypuff", "Peach", "Daisy", "Bowser", "Icies", "Sheik", "Zelda", "Dr. Mario", "Pichu", "Falco", "Marth", "Lucina", "Young Link", "Ganondorf", "Mewtwo", "Roy", "Chrom", "Mr. G&W", "Meta Knight", "Pit", "Dark Pit", "Zero Suit Samus", "Wario", "Snake", "Ike", "Pokemon Trainer", "Diddy Kong", "Lucas", "Sonic", "King Dedede", "Olimar", "Lucario", "ROB", "Toon Link", "Wolf", "Villager", "Mega Man", "Wii Fit Trainer", "Rosalina & Luma", "Little Mac", "Greninja", "Mii Brawler", "Mii Swordfighter", "Mii Gunner", "Palutena", "Pac-Man", "Robin", "Shulk", "Bowser Jr.", "Duck Hunt", "Ryu", "Ken", "Cloud", "Corrin", "Bayonetta", "Inkling", "Ridley", "Simon", "Richter", "King K Rool", "Isabelle", "Incineroar", "Piranha Plant", "Joker", "Hero", "Banjo & Kazooie", "Terry", "Byleth", "Min Min", "Steve", "Sephiroth", "Pyra+Mythra", "Kazuya", "Sora" }));
        fakeCombo.setEnabled(false);
        fakeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fakeComboActionPerformed(evt);
            }
        });

        saveMsg.setText("Save successful!");

        jLabel9.setText("Commentary");

        jLabel10.setText("Last Update: October 21, 2021   ");

        jCheckBox1.setText("AlwaysOnTop");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        loss1.setText("[L]");
        loss1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loss1ActionPerformed(evt);
            }
        });

        loss2.setText("[L]");
        loss2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loss2ActionPerformed(evt);
            }
        });

        bestOf.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "(Bo3)", "(Bo5)", " " }));
        bestOf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bestOfActionPerformed(evt);
            }
        });

        top8gen.setText("Top8Gen");
        top8gen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                top8genActionPerformed(evt);
            }
        });

        scoreAuto.setText("ScoreAutoSave");
        scoreAuto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scoreAutoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(28, 28, 28)
                                    .addComponent(p1Name, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(31, 31, 31)
                                    .addComponent(p1Score, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(10, 10, 10)
                                .addComponent(p1Character, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(1, 1, 1)
                        .addComponent(loss1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addGap(31, 31, 31)
                            .addComponent(p2Score, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addGap(28, 28, 28)
                            .addComponent(p2Name, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(10, 10, 10)
                        .addComponent(p2Character, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(top8gen, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scoreAuto)
                            .addComponent(jCheckBox1))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(loss2)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(261, 261, 261))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(255, 255, 255)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(saveMsg)
                        .addGap(56, 56, 56))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(commentary, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(rightMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(leftMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(bestOf, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(saveButton)
                                .addGap(36, 36, 36))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addContainerGap())))))
            .addGroup(layout.createSequentialGroup()
                .addGap(240, 240, 240)
                .addComponent(fakeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(jLabel1))
                            .addComponent(p1Name, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(loss1)))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(p1Score, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel2)))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(p1Character, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel4)
                                .addGap(1, 1, 1))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(p2Name, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(loss2)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jLabel5))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(p2Score, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(p2Character, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBox1)
                            .addComponent(top8gen, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scoreAuto)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel7)
                        .addGap(6, 6, 6))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(leftMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bestOf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(saveMsg, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(rightMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveButton))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(commentary, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addComponent(fakeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void p1NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p1NameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_p1NameActionPerformed

    private void p1CharacterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p1CharacterActionPerformed
saveButton.setEnabled(true);
        saveMsg.setText("");         // TODO add your handling code here:        
    }//GEN-LAST:event_p1CharacterActionPerformed
   
    private void p2CharacterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p2CharacterActionPerformed
saveButton.setEnabled(true);
        saveMsg.setText("");         // TODO add your handling code here:     
    }//GEN-LAST:event_p2CharacterActionPerformed

    private void p2NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p2NameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_p2NameActionPerformed

    private void leftMsgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftMsgActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_leftMsgActionPerformed

    private void rightMsgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightMsgActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rightMsgActionPerformed
    private void changeImg(String p1Char,String p2Char) throws IOException {
        BufferedImage p1Buff = retrieveChar(p1Char);
        BufferedImage p2Buff = retrieveChar(p2Char);
        File p1Out = new File("output/p1char.png");
        File p2Out = new File("output/p2char.png");
        ImageIO.write(p1Buff,"png",p1Out);
        ImageIO.write(p2Buff,"png",p2Out);
        try {
            PrintWriter p1CharPrint = new PrintWriter("output/p1char.txt");
            p1CharPrint.print(p1Character.getSelectedIndex());
            p1CharPrint.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("ERROR: File not found for p1char");
        }
        try {
            PrintWriter p2CharPrint = new PrintWriter("output/p2char.txt");
            p2CharPrint.print(p2Character.getSelectedIndex());
            p2CharPrint.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("ERROR: File not found for p2char");
        }
    }
    private BufferedImage retrieveChar(String character) throws IOException {
        String ans;
        if (character.equals("<none>")) {
           ans = "stockicons/blank.png";
        }
        else {
            ans = "stockicons/" + character + ".png";
        }
        File stockFile = new File(ans) {};
        Image stockImg = ImageIO.read(stockFile);
        BufferedImage stockBuff = (BufferedImage) stockImg;
        return stockBuff;
    }
    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        try {
            PrintWriter p1NamePrint = new PrintWriter("output/p1name.txt");
            String newName = p1Name.getText();
            if (loss1.isSelected()) {
                newName = newName + " [L]";
            }
            p1NamePrint.print(newName);
            p1NamePrint.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("ERROR: File not found for p1Name");
        }
        try {
            PrintWriter p2NamePrint = new PrintWriter("output/p2name.txt");
            String newName = p2Name.getText();
            if (loss2.isSelected()) {
                newName = newName + " [L]";
            }
            p2NamePrint.print(newName);
            p2NamePrint.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("ERROR: File not found for p2Name");
        }
        try {
            PrintWriter p1ScorePrint = new PrintWriter("output/p1score.txt");
            p1ScorePrint.print(p1Score.getValue());
            p1ScorePrint.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("ERROR: File not found for p1Score");
        }
        try {
            PrintWriter p2ScorePrint = new PrintWriter("output/p2score.txt");
            p2ScorePrint.print(p2Score.getValue());
            p2ScorePrint.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("ERROR: File not found for p2Score");
        }
        try {
            PrintWriter leftMsgPrint = new PrintWriter("output/leftmsg.txt");
            leftMsgPrint.print(leftMsg.getText() + " " + bestOf.getSelectedItem().toString());
            leftMsgPrint.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("ERROR: File not found for leftMSG");
        }
        try {
            PrintWriter rightMsgPrint = new PrintWriter("output/rightmsg.txt");
            rightMsgPrint.print(rightMsg.getText());
            rightMsgPrint.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("ERROR: File not found for rightMSG");
        }
        try {
            PrintWriter com = new PrintWriter("output/commentary.txt");
            com.print(commentary.getText());
            com.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("ERROR: File not found for commentary");
        }
        String p1Char = p1Character.getSelectedItem().toString();
        String p2Char = p2Character.getSelectedItem().toString();
        try {
            this.changeImg(p1Char,p2Char);
        } catch (IOException ex) {
            Logger.getLogger(SmashOverlay.class.getName()).log(Level.SEVERE, null, ex);
        }
       saveButton.setEnabled(false);
       saveMsg.setText("Save successful!");
    }//GEN-LAST:event_saveButtonActionPerformed

    private void p1NameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_p1NameKeyTyped
 // TODO add your handling code here:
 saveButton.setEnabled(true);
        saveMsg.setText("");   
    }//GEN-LAST:event_p1NameKeyTyped

    private void p2NameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_p2NameKeyTyped
      saveButton.setEnabled(true);
        saveMsg.setText("");    // TODO add your handling code here:
    }//GEN-LAST:event_p2NameKeyTyped

    private void p1ScoreStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_p1ScoreStateChanged
 if (scoreAuto.isSelected()) {
          try {
            PrintWriter p1ScorePrint = new PrintWriter("output/p1score.txt");
            p1ScorePrint.print(p1Score.getValue());
            p1ScorePrint.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("ERROR: File not found for p1Score");
        }
      } else {
        saveButton.setEnabled(true);
        saveMsg.setText("");   
      }        // TODO add your handling code here:
    }//GEN-LAST:event_p1ScoreStateChanged

    private void p2ScoreStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_p2ScoreStateChanged
    if (scoreAuto.isSelected()) {
        try {
            PrintWriter p2ScorePrint = new PrintWriter("output/p2score.txt");
            p2ScorePrint.print(p2Score.getValue());
            p2ScorePrint.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("ERROR: File not found for p2Score");
        }       // TODO add your handling code here:
    }
    else {
        saveButton.setEnabled(true);
        saveMsg.setText("");
    }
    }//GEN-LAST:event_p2ScoreStateChanged

    private void leftMsgKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_leftMsgKeyTyped
saveButton.setEnabled(true);
        saveMsg.setText("");         // TODO add your handling code here:
    }//GEN-LAST:event_leftMsgKeyTyped

    private void rightMsgKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rightMsgKeyTyped
saveButton.setEnabled(true);
        saveMsg.setText("");         // TODO add your handling code here:
    }//GEN-LAST:event_rightMsgKeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String oldName = p1Name.getText();
        int oldScore = (int) p1Score.getValue();
        fakeCombo.setSelectedItem(p1Character.getSelectedItem());
        
        p1Name.setText(p2Name.getText());
        p1Score.setValue(p2Score.getValue());
        p1Character.setSelectedItem(p2Character.getSelectedItem());
        
        p2Name.setText(oldName);
        p2Score.setValue(oldScore);
        p2Character.setSelectedItem(fakeCombo.getSelectedItem());
        boolean p1Loss = loss1.isSelected();
        boolean p2Loss = loss2.isSelected();
        loss1.setSelected(p2Loss);
        loss2.setSelected(p1Loss);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if (jCheckBox1.isSelected()) {
            this.setAlwaysOnTop(true);
        }
        else {
            this.setAlwaysOnTop(false);
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void commentaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commentaryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_commentaryActionPerformed

    private void commentaryKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_commentaryKeyTyped
       saveButton.setEnabled(true);
        saveMsg.setText("");   // TODO add your handling code here:
    }//GEN-LAST:event_commentaryKeyTyped

    private void p1ScoreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_p1ScoreKeyTyped
      if (scoreAuto.isSelected()) {
          try {
            PrintWriter p1ScorePrint = new PrintWriter("output/p1score.txt");
            p1ScorePrint.print(p1Score.getValue());
            p1ScorePrint.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("ERROR: File not found for p1Score");
        }
      } else {
        saveButton.setEnabled(true);
        saveMsg.setText("");   
      } // TODO add your handling code here:
    }//GEN-LAST:event_p1ScoreKeyTyped

    private void p2ScoreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_p2ScoreKeyTyped
saveButton.setEnabled(true);
        saveMsg.setText("");         // TODO add your handling code here:
    }//GEN-LAST:event_p2ScoreKeyTyped

    private void loss1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loss1ActionPerformed
saveButton.setEnabled(true);
        saveMsg.setText("");         // TODO add your handling code here:
    }//GEN-LAST:event_loss1ActionPerformed

    private void loss2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loss2ActionPerformed
      saveButton.setEnabled(true);
        saveMsg.setText("");   // TODO add your handling code here:
    }//GEN-LAST:event_loss2ActionPerformed

    private void bestOfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bestOfActionPerformed
saveButton.setEnabled(true);
        saveMsg.setText("");         // TODO add your handling code here:
    }//GEN-LAST:event_bestOfActionPerformed

    private void top8genActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_top8genActionPerformed
        Top8Gen generator = new Top8Gen();
        generator.setVisible(true);
    }//GEN-LAST:event_top8genActionPerformed

    private void scoreAutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scoreAutoActionPerformed
        if (scoreAuto.isSelected()) {
            try {
            PrintWriter p1ScorePrint = new PrintWriter("output/p1score.txt");
            p1ScorePrint.print(p1Score.getValue());
            p1ScorePrint.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("ERROR: File not found for p1Score");
        }
            try {
            PrintWriter p2ScorePrint = new PrintWriter("output/p2score.txt");
            p2ScorePrint.print(p2Score.getValue());
            p2ScorePrint.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("ERROR: File not found for p2Score");
        }  
        } 
        // TODO add your handling code here:
    }//GEN-LAST:event_scoreAutoActionPerformed

    private void fakeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fakeComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fakeComboActionPerformed
    private String removeIfContains(String name,String bad) {
        Scanner scan = new Scanner(name);
        String ans = "";
        while (scan.hasNext()) {
            String current = scan.next();
            if (current.equals(bad)) {
            return removeSpace(ans);    
            }
            ans = ans + " " + current;
        }
        return removeSpace(ans);
    }
    private String removeSpace(String name) {
        StringBuffer ansBuff = new StringBuffer(name);
        ansBuff.deleteCharAt(0);
        String ans = ansBuff.toString();
        return ans;
    }
    public void retrieveSave() {
        try {
            File p1NameFile = new File("output/p1name.txt");
            Scanner p1NameRead = new Scanner(p1NameFile);
            String p1NameNew = p1NameRead.nextLine();
            if (p1NameNew.contains("[L]")) {
             p1NameNew = removeIfContains(p1NameNew,"[L]");
             loss1.setSelected(true);
            }
            p1Name.setText(p1NameNew);
        } catch (FileNotFoundException ex) {
            System.out.println("File p1name.txt not found, will generate when file saved.");
        }catch (NoSuchElementException em) {
            System.out.println("No text found in file p1name");
        }
        try {
            File p2NameFile = new File("output/p2name.txt");
            Scanner p2NameRead = new Scanner(p2NameFile);
            String p2NameNew = p2NameRead.nextLine();
            if (p2NameNew.contains("[L]")) {
             p2NameNew = removeIfContains(p2NameNew,"[L]");
             loss2.setSelected(true);
            }
            p2Name.setText(p2NameNew);
        } catch (FileNotFoundException ex) {
            System.out.println("File p2name.txt not found, will generate when file saved.");
        }catch (NoSuchElementException em) {
            System.out.println("No text found in file p2name");
        }
        try {
            File p1ScoreFile = new File("output/p1score.txt");
            Scanner p1ScoreRead = new Scanner(p1ScoreFile);
            int p1ScoreNew = p1ScoreRead.nextInt(); 
            p1Score.setValue(p1ScoreNew);
        } catch (FileNotFoundException ex) {
            System.out.println("File p1score.txt not found, will generate when file saved.");
        } catch (NoSuchElementException em) {
            System.out.println("No text found in file p1score");
        }
        try {
            File p2ScoreFile = new File("output/p2score.txt");
            Scanner p2ScoreRead = new Scanner(p2ScoreFile);
            int p2ScoreNew = p2ScoreRead.nextInt(); 
            p2Score.setValue(p2ScoreNew);
        } catch (FileNotFoundException ex) {
            System.out.println("File p2score.txt not found, will generate when file saved.");
        } catch (NoSuchElementException em) {
            System.out.println("No text found in file p2score");
        }//e
        try {
            File leftmsgnew = new File("output/leftmsg.txt");
            Scanner leftread = new Scanner(leftmsgnew);
            String leftString = leftread.nextLine(); 
            if (leftString.contains("(Bo3)")) {
             leftString = removeIfContains(leftString,"(Bo3)");
             bestOf.setSelectedIndex(0);
            }
            if (leftString.contains("(Bo5)")) {
             leftString = removeIfContains(leftString,"(Bo5)");
             bestOf.setSelectedIndex(1);
            }
            leftMsg.setText(leftString);
        } catch (FileNotFoundException ex) {
            System.out.println("File leftmsg.txt not found, will generate when file saved.");
        }catch (NoSuchElementException em) {
            System.out.println("No text found in file leftmsg");
        }
        try {
            File rightFile = new File("output/rightmsg.txt");
            Scanner rightScan = new Scanner(rightFile);
            String rightString = rightScan.nextLine(); 
            rightMsg.setText(rightString);
        } catch (FileNotFoundException ex) {
            System.out.println("File rightmsg.txt not found, will generate when file saved.");
        }catch (NoSuchElementException em) {
            System.out.println("No text found in file rightmsg");
        }
        try {
            File com = new File("output/commentary.txt");
            Scanner comScan = new Scanner(com);
            String comString = comScan.nextLine(); 
            commentary.setText(comString);
        } catch (FileNotFoundException ex) {
            System.out.println("File rightmsg.txt not found, will generate when file saved.");
        }catch (NoSuchElementException em) {
            System.out.println("No text found in file commentary");
        }
        try {
            File p1CharFile = new File("output/p1char.txt");
            Scanner p1CharScan = new Scanner(p1CharFile);
            int p1CharNew = p1CharScan.nextInt(); 
            p1Character.setSelectedIndex(p1CharNew);
        } catch (FileNotFoundException ex) {
            System.out.println("File rightmsg.txt not found, will generate when file saved.");
        }catch (NoSuchElementException em) {
            System.out.println("No text found in file p1char");
        }
        try {
            File p2CharFile = new File("output/p2char.txt");
            Scanner p2CharScan = new Scanner(p2CharFile);
            int p2CharNew = p2CharScan.nextInt(); 
            p2Character.setSelectedIndex(p2CharNew);
        } catch (FileNotFoundException ex) {
            System.out.println("File rightmsg.txt not found, will generate when file saved.");
        }catch (NoSuchElementException em) {
            System.out.println("No text found in file p2char");
        }
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SmashOverlay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SmashOverlay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SmashOverlay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SmashOverlay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SmashOverlay().setVisible(true);
            }
        });
        
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> bestOf;
    private javax.swing.JTextField commentary;
    private javax.swing.JComboBox<String> fakeCombo;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField leftMsg;
    private javax.swing.JCheckBox loss1;
    private javax.swing.JCheckBox loss2;
    private javax.swing.JComboBox<String> p1Character;
    private javax.swing.JTextField p1Name;
    private javax.swing.JSpinner p1Score;
    private javax.swing.JComboBox<String> p2Character;
    private javax.swing.JTextField p2Name;
    private javax.swing.JSpinner p2Score;
    private javax.swing.JTextField rightMsg;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel saveMsg;
    private javax.swing.JCheckBox scoreAuto;
    private javax.swing.JButton top8gen;
    // End of variables declaration//GEN-END:variables
}
